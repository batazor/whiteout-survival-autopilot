logging {
  level  = "info"
  format = "json"
}

// üü¢ –ò—Å—Ç–æ—á–Ω–∏–∫ –º–µ—Ç—Ä–∏–∫: whiteout-bot –Ω–∞ host.docker.internal:2112
prometheus.scrape "whiteout_bot" {
    targets = [
      {
        __address__ = "host.docker.internal:2112",
      },
    ]

    forward_to = [prometheus.remote_write.grafana_cloud.receiver]
}

// ‚òÅÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Grafana Cloud (Prometheus)
prometheus.remote_write "grafana_cloud" {
  endpoint {
    url = "https://prometheus-prod-24-prod-eu-west-2.grafana.net/api/prom/push"
    basic_auth {
      username = "2385173"
      password = "glc_eyJvIjoiMjMwNDc2IiwibiI6InN0YWNrLTEyMzA0NjctaG0td3JpdGUtd2hpdGVvdXRzdXJ2aXZhbGF1dG9waWxvdCIsImsiOiIzWDQ0cU1iODlnTjJybHhHZTJ0NWExNHciLCJtIjp7InIiOiJwcm9kLWV1LXdlc3QtMiJ9fQ=="
    }
  }
}

tracing {
    // Sample all traces. This value should be lower for production configs!
  	sampling_fraction = 1

    write_to = [otelcol.exporter.otlp.default.input]
}

// üü¢ –ò—Å—Ç–æ—á–Ω–∏–∫ –º–µ—Ç—Ä–∏–∫: whiteout-bot –Ω–∞ host.docker.internal:8080
otelcol.receiver.otlp "otlp_receiver" {
    grpc {
        endpoint = "0.0.0.0:4317"
    }
    http {
        endpoint = "0.0.0.0:4318"
    }

    output {
      traces  = [otelcol.exporter.otlp.default.input,]
    }
}

otelcol.exporter.otlp "default" {
  client {
    endpoint = "tempo-prod-10-prod-eu-west-2.grafana.net:443"
    auth     = otelcol.auth.basic.creds.handler
  }
}

otelcol.auth.basic "creds" {
  username = "1182575"
  password = "glc_eyJvIjoiMjMwNDc2IiwibiI6InN0YWNrLTEyMzA0NjctaHQtd3JpdGUtd2hpdGVvdXRzdXJ2aXZhbGF1dG9waWxvdCIsImsiOiJCRDgyYjFMMjhub3QzRGI4RDFmNzNCZnkiLCJtIjp7InIiOiJwcm9kLWV1LXdlc3QtMiJ9fQ=="
}
