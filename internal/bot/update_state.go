package bot

import (
	"context"
	"log/slog"
)

func (b *Bot) updateStateFromScreen(ctx context.Context, screen string, filename string) {
	if _, err := b.Device.ADB.Screenshot(filename); err != nil {
		b.logger.Warn("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç", slog.String("screen", screen), slog.Any("error", err))
		return
	}

	rules := b.Rules[screen]
	newState, err := b.executor.Analyzer().AnalyzeAndUpdateState(filename, b.Gamer, rules, b.Queue)
	if err != nil {
		b.logger.Warn("‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —ç–∫—Ä–∞–Ω–∞", slog.String("screen", screen), slog.Any("error", err))
		return
	}

	*b.Gamer = *newState
	b.logger.Info("üì• –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ", slog.String("screen", screen))

	if saveErr := b.Repo.SaveGamer(ctx, newState); saveErr != nil {
		b.logger.Error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å state.yaml", slog.Any("error", saveErr))
	} else {
		b.logger.Info("üíæ –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ state.yaml")
	}
}
