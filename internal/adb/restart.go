package adb

import (
	"fmt"
	"log/slog"
	"os/exec"
	"time"
)

const gamePackageName = "com.gof.global"

// RestartApplication –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ adb-–∫–æ–º–∞–Ω–¥—ã.
func (a *Controller) RestartApplication() error {
	a.logger.Warn("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è", slog.String("package", gamePackageName))

	// –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
	closeCmd := exec.Command("adb", "-s", a.deviceID, "shell", "am", "force-stop", gamePackageName)
	if err := closeCmd.Run(); err != nil {
		a.logger.Error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è", slog.String("package", gamePackageName), slog.Any("error", err))
		return fmt.Errorf("failed to close app %s: %w", gamePackageName, err)
	}

	time.Sleep(2 * time.Second)

	// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–Ω–æ–≤–∞
	startCmd := exec.Command("adb", "-s", a.deviceID, "shell", "monkey", "-p", gamePackageName, "-c", "android.intent.category.LAUNCHER", "1")
	if err := startCmd.Run(); err != nil {
		a.logger.Error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è", slog.String("package", gamePackageName), slog.Any("error", err))
		return fmt.Errorf("failed to start app %s: %w", gamePackageName, err)
	}

	a.logger.Info("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ", slog.String("package", gamePackageName))

	return nil
}
