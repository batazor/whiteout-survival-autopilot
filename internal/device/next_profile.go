package device

import (
	"context"
	"fmt"
	"image"
	"log/slog"
	"time"

	"github.com/batazor/whiteout-survival-autopilot/internal/fsm"
	"github.com/batazor/whiteout-survival-autopilot/internal/vision"
)

func (d *Device) NextProfile(profileIdx, expectedGamerIdx int) {
	ctx := context.Background()

	d.activeProfileIdx = profileIdx

	profile := d.Profiles[profileIdx]
	expected := &profile.Gamer[expectedGamerIdx]

	d.Logger.Info("üéÆ –°–º–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞",
		slog.String("email", profile.Email),
		slog.String("–æ–∂–∏–¥–∞–µ–º—ã–π", expected.Nickname),
	)

	// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–ª–±—ç–∫ (–≤—Ä–µ–º–µ–Ω–Ω–æ, —É—Ç–æ—á–Ω–∏–º –Ω–∏–∂–µ)
	d.FSM.SetCallback(expected)

	// üîß –ü–µ—Ä–µ—Å–æ–∑–¥–∞—ë–º FSM –¥–ª—è –Ω–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –¥–æ –ª—é–±—ã—Ö ForceTo/WaitForText
	d.FSM = fsm.NewGame(d.Logger, d.ADB, d.areaLookup)

	// üîÅ –ù–∞–≤–∏–≥–∞—Ü–∏—è: –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç–∫—Ä–∞–Ω—É –≤—ã–±–æ—Ä–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ Google
	d.Logger.Info("‚û°Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –≤ —ç–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ –∞–∫–∫–∞—É–Ω—Ç–∞")
	d.FSM.ForceTo(fsm.StateChiefProfileAccountChangeGoogle)

	// –∂–¥–µ–º email
	emailZones, _ := vision.WaitForText(ctx, d.ADB, []string{profile.Email}, time.Second, image.Rectangle{})

	d.Logger.Info("üü¢ –ö–ª–∏–∫ –ø–æ email –∞–∫–∫–∞—É–Ω—Ç—É", slog.String("text", emailZones.Text))
	if err := d.ADB.ClickOCRResult(emailZones); err != nil {
		d.Logger.Error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–∏–∫–Ω—É—Ç—å –ø–æ email –∞–∫–∫–∞—É–Ω—Ç—É", slog.Any("err", err))
		panic(fmt.Sprintf("ClickRegion(email:gamer1) failed: %v", err))
	}

	time.Sleep(5 * time.Second)

	d.Logger.Info("üü¢ –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è Google", slog.String("region", "to_google_continue"))
	if err := d.ADB.ClickRegion("to_google_continue", d.areaLookup); err != nil {
		d.Logger.Error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–∏–∫–Ω—É—Ç—å –ø–æ to_google_continue", slog.Any("err", err))
		panic(fmt.Sprintf("ClickRegion(to_google_continue) failed: %v", err))
	}

	// —Å–±—Ä–æ—Å–∏–º FSM
	d.FSM = fsm.NewGame(d.Logger, d.ADB, d.areaLookup)

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤
	err := d.handleEntryScreens(ctx)
	if err != nil {
		d.Logger.Error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ –±–∞–Ω–Ω–µ—Ä—ã", slog.Any("err", err))
		panic(fmt.Sprintf("handleEntryScreens() failed: %v", err))
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ –ø—Ä–æ—Ñ–∏–ª—è
	active, pIdx, _, err := d.DetectAndSetCurrentGamer(ctx)
	if err != nil || pIdx != profileIdx {
		d.Logger.Warn("‚ö†Ô∏è –ü–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –∞–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç", slog.Any("detected_profile", pIdx), slog.Any("err", err))
		return
	}

	// –ï—Å–ª–∏ —ç—Ç–æ –ù–ï —Ç–æ—Ç, –∫–æ–≥–æ –º—ã –æ–∂–∏–¥–∞–ª–∏ ‚Üí –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è
	if active.ID != expected.ID {
		d.Logger.Warn("üõë –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±—Ä–∞–Ω –Ω–µ —Ç–æ—Ç –∏–≥—Ä–æ–∫ ‚Äî –¥–µ–ª–∞–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ",
			slog.String("–æ–∂–∏–¥–∞–ª—Å—è", expected.Nickname),
			slog.String("–ø–æ–ª—É—á–µ–Ω", active.Nickname),
		)
		d.NextGamer(profileIdx, expectedGamerIdx)
	}

	// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–ª–±—ç–∫ (–Ω–∞—Å—Ç–æ—è—â–∏–π)
	d.FSM.SetCallback(active)

	// –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ –Ω–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å
	d.Logger.Info("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ –Ω–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å", "nickname", active.Nickname)
}
