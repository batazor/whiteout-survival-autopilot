package device

import (
	"context"
	"fmt"
	"image"
	"log/slog"
	"time"

	"github.com/batazor/whiteout-survival-autopilot/internal/fsm"
	"github.com/batazor/whiteout-survival-autopilot/internal/vision"
)

func (d *Device) NextProfile(profileIdx, expectedGamerIdx int) {
	ctx := context.Background()

	d.activeProfileIdx = profileIdx

	profile := d.Profiles[profileIdx]
	expected := &profile.Gamer[expectedGamerIdx]

	d.Logger.Info("üéÆ –°–º–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞",
		slog.String("email", profile.Email),
		slog.String("–æ–∂–∏–¥–∞–µ–º—ã–π", expected.Nickname),
	)

	// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–ª–±—ç–∫ (–≤—Ä–µ–º–µ–Ω–Ω–æ, —É—Ç–æ—á–Ω–∏–º –Ω–∏–∂–µ)
	d.FSM.SetCallback(expected)

	// üîÅ –ù–∞–≤–∏–≥–∞—Ü–∏—è: –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç–∫—Ä–∞–Ω—É –≤—ã–±–æ—Ä–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ Google
	d.Logger.Info("‚û°Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –≤ —ç–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ –∞–∫–∫–∞—É–Ω—Ç–∞")
	d.FSM.ForceTo(fsm.StateChiefProfileAccountChangeGoogle)

	// –∂–¥–µ–º email
	emailZones, _ := vision.WaitForText(ctx, d.ADB, []string{profile.Email}, time.Second, image.Rectangle{})

	d.Logger.Info("üü¢ –ö–ª–∏–∫ –ø–æ email –∞–∫–∫–∞—É–Ω—Ç—É", slog.String("text", emailZones.Text))
	if err := d.ADB.ClickOCRResult(emailZones); err != nil {
		d.Logger.Error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–∏–∫–Ω—É—Ç—å –ø–æ email –∞–∫–∫–∞—É–Ω—Ç—É", slog.Any("err", err))
		panic(fmt.Sprintf("ClickRegion(email:gamer1) failed: %v", err))
	}

	time.Sleep(5 * time.Second)

	d.Logger.Info("üü¢ –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è Google", slog.String("region", "to_google_continue"))
	if err := d.ADB.ClickRegion("to_google_continue", d.areaLookup); err != nil {
		d.Logger.Error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–∏–∫–Ω—É—Ç—å –ø–æ to_google_continue", slog.Any("err", err))
		panic(fmt.Sprintf("ClickRegion(to_google_continue) failed: %v", err))
	}

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ welcome back
	newCtx, _ := context.WithTimeout(ctx, 10*time.Second)
	resp, _ := vision.WaitForText(newCtx, d.ADB, []string{"Welcome"}, time.Second, image.Rectangle{})
	if resp != nil {
		d.Logger.Info("üü¢ –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ Welcome Back", slog.String("region", "welcome_back_continue_button"))
		if err := d.ADB.ClickRegion("welcome_back_continue_button", d.areaLookup); err != nil {
			d.Logger.Error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–∏–∫–Ω—É—Ç—å –ø–æ welcome_back_continue_button", slog.Any("err", err))
			panic(fmt.Sprintf("ClickRegion(welcome_back_continue_button) failed: %v", err))
		}
	}

	// üì∏ –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞
	tmpPath := "screenshots/after_profile_switch.png"
	pIdx, gIdx, err := d.DetectedGamer(ctx, tmpPath)
	if err != nil || pIdx != profileIdx {
		d.Logger.Warn("‚ö†Ô∏è –ü–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –∞–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç", slog.Any("detected_profile", pIdx), slog.Any("err", err))
		return
	}

	d.activeGamerIdx = gIdx
	active := &d.Profiles[pIdx].Gamer[gIdx]

	d.Logger.Info("üîé –ò–≥—Ä–æ–∫ –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞", slog.String("nickname", active.Nickname))

	// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–ª–±—ç–∫ –Ω–∞ —Ç–æ–≥–æ, –∫—Ç–æ —Ä–µ–∞–ª—å–Ω–æ –∞–∫—Ç–∏–≤–µ–Ω
	d.FSM.SetCallback(active)

	// –ï—Å–ª–∏ —ç—Ç–æ –ù–ï —Ç–æ—Ç, –∫–æ–≥–æ –º—ã –æ–∂–∏–¥–∞–ª–∏ ‚Üí –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è
	if active.ID != expected.ID {
		d.Logger.Warn("üõë –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±—Ä–∞–Ω –Ω–µ —Ç–æ—Ç –∏–≥—Ä–æ–∫ ‚Äî –¥–µ–ª–∞–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ",
			slog.String("–æ–∂–∏–¥–∞–ª—Å—è", expected.Nickname),
			slog.String("–ø–æ–ª—É—á–µ–Ω", active.Nickname),
		)
		d.NextGamer(profileIdx, expectedGamerIdx)
	}

	// FSM –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å
	d.Logger.Info("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è FSM –ø–æ—Å–ª–µ –ø—Ä–æ—Ñ–∏–ª—è")
	d.FSM = fsm.NewGame(d.Logger, d.ADB, d.areaLookup)
}
