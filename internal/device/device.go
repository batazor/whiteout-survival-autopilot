package device

import (
	"fmt"
	"time"

	"github.com/batazor/whiteout-survival-autopilot/internal/domain"
)

type player struct {
	Email string
	Gamer domain.GamerOfProfile
}

func Start(deviceName string, profiles []domain.Profile) {
	fmt.Printf("üì± –ó–∞–ø—É—Å–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: %s\n", deviceName)

	var queue []player
	for _, profile := range profiles {
		for _, gamer := range profile.Gamer {
			queue = append(queue, player{
				Email: profile.Email,
				Gamer: gamer,
			})
		}
	}

	var prevEmail string
	var prevGamerID int

	for {
		for _, p := range queue {
			if p.Email != prevEmail {
				fmt.Printf("üîÑ –°–º–µ–Ω–∞ –ø—Ä–æ—Ñ–∏–ª—è –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ %s: %s ‚Üí %s\n",
					deviceName, prevEmail, p.Email)
				fmt.Println("   ‚öôÔ∏è  –í—ã–ø–æ–ª–Ω—è–µ–º –Ω–∞–±–æ—Ä –∫–æ–º–∞–Ω–¥ 1 (—Å–º–µ–Ω–∞ –ø—Ä–æ—Ñ–∏–ª—è)")
				// TODO: –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –ø—Ä–æ—Ñ–∏–ª—è
			} else if p.Gamer.ID != prevGamerID {
				fmt.Printf("üë§ –°–º–µ–Ω–∞ –∏–≥—Ä–æ–∫–∞ –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ %s: %d ‚Üí %d\n",
					deviceName, prevGamerID, p.Gamer.ID)
				fmt.Println("   ‚öôÔ∏è  –í—ã–ø–æ–ª–Ω—è–µ–º –Ω–∞–±–æ—Ä –∫–æ–º–∞–Ω–¥ 2 (—Å–º–µ–Ω–∞ –∏–≥—Ä–æ–∫–∞)")
				// TODO: –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –∏–≥—Ä–æ–∫–∞
			}

			fmt.Printf("‚ñ∂Ô∏è  –ê–∫—Ç–∏–≤–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–∞ %s: –ù–∏–∫–Ω–µ–π–º: %s | ID: %d | –ü—Ä–æ—Ñ–∏–ª—å: %s\n",
				deviceName, p.Gamer.Nickname, p.Gamer.ID, p.Email)

			prevEmail = p.Email
			prevGamerID = p.Gamer.ID

			time.Sleep(5 * time.Second)
		}
	}
}
